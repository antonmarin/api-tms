name: deploy pipeline
on: 
  push:
    branches:
      - master
jobs: 
  build-and-deploy:
    name: Build app and deploy
    runs-on: ubuntu-18.04
    env:
      IMAGES_PROD_NGINX: ${{ secrets.PROD_REPO }}/nginx:${{ github.sha }}
      IMAGES_PROD_PHP: ${{ secrets.PROD_REPO }}/php:${{ github.sha }}
      DEPLOYMENT_PATH: "/home/runner/api-tms"
    steps:
      - name: Checkout
        uses: actions/checkout@v1
      - name: Install Task
        uses: Arduino/actions/setup-taskfile@master
        with:
          version: '2.7.1'
      - name: Docker info
        run: docker info
      - name: Build containers
        run: task build
      - name: "Setup gcloud tool"
        uses: GoogleCloudPlatform/github-actions/setup-gcloud@master
        with:
          version: '274.0.1'
          service_account_email: ${{ secrets.GCP_SA_EMAIL }}
          service_account_key: ${{ secrets.GCP_SA_KEY }}
      - name: GCloud info 
        run: gcloud info
      - name: Select GCP project
        run: gcloud config set project ${{ secrets.GCP_PROJECT_NAME }}
      - name: Config docker to use gcp registry 
        run: gcloud auth configure-docker
      - name: Tag containers to push
        run: |
          docker tag ${DEV_REPO}/php:latest ${IMAGES_PROD_PHP} &&
          docker tag ${DEV_REPO}/nginx:latest ${IMAGES_PROD_NGINX}
        env:
          DEV_REPO: "api-tms" # same as Taskfile.yml vars.IMAGES_BASE_REPOSITORY
      - name: Push containers
        run: |
          docker push ${IMAGES_PROD_PHP} &&
          docker push ${IMAGES_PROD_NGINX}
      - name: Upload deploy config	
        run: gcloud compute --project "mythic-guild-264223" scp	
          --zone "us-central1-c"	
          docker-compose.yaml terraform-instance:${DEPLOYMENT_PATH}/
      - name: Deploy application	
        run: gcloud compute --project "mythic-guild-264223" ssh	
          --zone "us-central1-c" "terraform-instance"	
          --command="docker run --rm
              -e IMAGES_TAG=${{ github.sha }}
              -e REPO=${{ secrets.PROD_REPO }}
              -v /var/run/docker.sock:/var/run/docker.sock
              -v $PWD:$PWD
              -w=$PWD
              docker/compose:1.24.0 up -d --no-build --remove-orphans"
