---
version: '2'

includes:
  backend: ./backend
  frontend: ./frontend

tasks:
  build:
    desc: "Build full application"
    cmds:
      - docker build
        -t {{.IMAGES_PHP}}
        -f backend/build/Dockerfile
        backend
      - docker build
        -t {{.IMAGES_NGINX}}
        -f frontend/build/Dockerfile
        frontend
    vars:
      IMAGES_PHP: "{{.IMAGES_BASE_REPOSITORY}}/php:{{ default .IMAGES_DEFAULT_TAG .IMAGES_TAG }}"
      IMAGES_NGINX: "{{.IMAGES_BASE_REPOSITORY}}/nginx:{{ default .IMAGES_DEFAULT_TAG .IMAGES_TAG }}"
      IMAGES_BASE_REPOSITORY: "api-tms"
      IMAGES_DEFAULT_TAG: "latest"

  deploy-dev:
    desc: "Deploy application to develop"
    cmds:
      - docker-compose up -d --build

  .create-prod:
    cmds:
#      - docker-machine create
#        --driver google
#        --google-project mythic-guild-264223
#        --google-zone us-central1-a
#        --google-machine-type f1-micro
#        --google-machine-image https://www.googleapis.com/compute/v1/projects/cos-cloud/global/images/cos-stable
#        --google-tags http-server
#        docker-machine-1
      - gcloud deployment-manager deployments create production
        --config deploy/production.yml
      - gcloud compute firewall-rules create default-allow-http-80
        --allow tcp:80
        --source-ranges 0.0.0.0/0
        --target-tags http-server
        --description "Allow port 80 access to http-server"
      - gcloud compute firewall-rules create default-allow-https-443
        --allow tcp:443
        --source-ranges 0.0.0.0/0
        --target-tags https-server
        --description "Allow port 443 access to https-server"
  
  lint:
    desc: "Quick tests not required to build app"
    cmds:
      - task: lint-dockerfile
      - task: backend:lint
  lint-dockerfile:
    cmds:
      - docker run --rm -v $PWD:/app -w /app hadolint/hadolint:latest-debian
        sh -c "find . -name Dockerfile | xargs -L1 hadolint"
  lint-markdown:
    cmds:
      - docker run -i --rm -v $PWD:/work tmknom/markdownlint /work

  .ssh-prod:
    cmds:
      - gcloud compute --project "mythic-guild-264223" ssh
        --zone "us-central1-c"
        runner@terraform-instance

  test:
    desc: "PHPStan & Test application. Run locally after deploy"
    cmds:
      - docker-compose exec php vendor/bin/phpstan analyse /app
      - docker-compose exec php vendor/bin/codecept run --steps

